modeltime_table(
update_prophet_model_recursive
) %>%
modeltime_forecast(
new_data = future,
actual_data = riders_monthly_tbl,
keep_data   = TRUE
)
modeltime_table(
update_prophet_model_recursive
)
update_prophet_model_recursive
modeltime_table(
update_prophet_model_recursive
) %>%
modeltime_forecast(
new_data = future_data,
actual_data = riders_monthly_tbl,
keep_data   = TRUE
)
future_data
modeltime_table(
update_prophet_model_recursive
) %>%
modeltime_forecast(
new_data = future,
actual_data = riders_monthly_tbl,
keep_data   = TRUE
)
prophet_recipe
recipe_lag
modeltime_table(
update_prophet_model_recursive
) %>%
modeltime_forecast(
new_data = future,
actual_data = riders_monthly_tbl,
keep_data   = TRUE
)
update_prophet_model_recursive
modeltime_table(
update_prophet_model_recursive
)
modeltime_table(
update_prophet_model_recursive
) %>%
modeltime_forecast(
new_data = future,
keep_data   = TRUE
)
modeltime_table(
model_fit_lm,
model_fit_lm_recursive
) %>%
update_model_description(2, "LM - Lag Roll") %>%
modeltime_forecast(
new_data    = future_data,
keep_data   = TRUE
)
knitr::opts_chunk$set(echo = TRUE)
library(slider)
library(tidyverse)
library(tidymodels)
library(timetk)
library(modeltime)
library(slider)
riders_monthly_tbl <- data %>%
# membuang baris terakhir
slice(-nrow(data)) %>%
# mengubah nama kolom
rename(n_riders = `Portland Oregon average monthly bus ridership (/100) January 1973 through June 1982, n=114`,
date = Month) %>%
# mengubah jenis data
mutate(date = lubridate::ym(date),
n_riders = as.integer(n_riders)
)
riders_monthly_tbl %>%
plot_acf_diagnostics(
.date_var = date,
.value    = n_riders,
.show_white_noise_bars = TRUE,
.interactive = FALSE
)
splits <- riders_monthly_tbl %>%
time_series_split(
date_var = date,
assess = "1 year",
cumulative = TRUE
)
splits %>%
tk_time_series_cv_plan() %>%
plot_time_series_cv_plan(
.date_var = date,
.value = n_riders,
.interactive = FALSE
)
# forecast horizon 1 tahun
FORECAST_HORIZON <- 12
riders_monthly_tbl_extend <- riders_monthly_tbl %>%
future_frame(
.length_out = FORECAST_HORIZON,
.bind_data  = TRUE
)
tail(riders_monthly_tbl_extend, 13)
prophet_recipe <- recipe(n_riders ~ ., data = riders_monthly_tbl_extend) %>%
step_lag(N_riders, lag = 1)
prophet_recipe
riders_monthly_tbl_lag <- prophet_recipe %>% prep() %>% juice()
prophet_recipe <- recipe(n_riders ~ ., data = riders_monthly_tbl_extend) %>%
step_lag(n_riders, lag = 1)
prophet_recipe
riders_monthly_tbl_lag <- prophet_recipe %>% prep() %>% juice()
# full data
full <- riders_monthly_tbl_lag %>%
filter(!is.na(n_riders)) %>%
drop_na()
# future data
future <- riders_monthly_tbl_lag %>%
filter(is.na(n_riders))
# training data
train <- prophet_recipe %>%
prep() %>%
bake(new_data = training(splits)) %>%
# buang baris dengan missing value
drop_na()
# testing data
test <- prophet_recipe %>%
prep() %>%
bake(new_data = testing(splits)) %>%
# buang baris dengan missing value
drop_na()
prophet_model <- prophet_reg() %>%
set_engine("prophet") %>%
fit(
N_riders ~ Month,
data = train
)
prophet_model <- prophet_reg() %>%
set_engine("prophet") %>%
fit(
n_riders ~ date,
data = train
)
prophet_model
prophet_model_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(
n_riders ~ .,
data = train
)
prophet_model_recursive
calibrate <- modeltime_table(
prophet_model,
prophet_model_recursive
) %>%
modeltime_calibrate(
new_data = test
)
calibrate
# cek akurasi model
calibrate %>%
modeltime_accuracy()
calibrate %>%
modeltime_forecast(
new_data = test,
actual_data = full
) %>%
plot_modeltime_forecast(
.interactive = FALSE
)
calibrate %>%
modeltime_forecast(
new_data = train,
actual_data = full
) %>%
plot_modeltime_forecast(
.interactive = FALSE
)
calibrate %>%
modeltime_forecast(
new_data = test,
actual_data = full
) %>%
plot_modeltime_forecast(
.interactive = FALSE
)
modeltime_table(
prophet_model_recursive
) %>%
modeltime_calibrate(
new_data = test
) %>%
modeltime_residuals() %>%
plot_modeltime_residuals(
.type = "acf",
.show_white_noise_bars = TRUE,
.interactive = FALSE
)
update_prophet_model_recursive <- linear_reg() %>%
set_engine("lm") %>%
fit(
n_riders ~.,
data = full
) %>%
recursive(
transform = prophet_recipe,
train_tail = tail(full, 1)
)
update_prophet_model_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(
n_riders ~.,
data = full
) %>%
recursive(
transform = prophet_recipe,
train_tail = tail(full, 1)
)
modeltime_table(
update_prophet_model_recursive
) %>%
modeltime_forecast(
new_data = future,
keep_data   = TRUE
)
FORECAST_HORIZON <- 24
m750_extended <- m750 %>%
group_by(id) %>%
future_frame(
.length_out = FORECAST_HORIZON,
.bind_data  = TRUE
) %>%
ungroup()
recipe_lag <- recipe(value ~ date, m750_extended) %>%
step_lag(value, lag = 1)
# Data Preparation
m750_lagged <- recipe_lag %>% prep() %>% juice()
# Data Preparation
m750_lagged <- recipe_lag %>% prep() %>% juice()
train_data <- m750_lagged %>%
filter(!is.na(value)) %>%
drop_na()
future_data <- m750_lagged %>%
filter(is.na(value))
# Modeling
model_fit_lm <- prophet_reg() %>%
set_engine("prophet") %>%
fit(value ~ date, data = train_data)
model_fit_lm_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(value ~ ., data = train_data) %>%
recursive(
transform  = recipe_lag,
train_tail = tail(train_data, 1)
)
modeltime_table(
model_fit_lm,
model_fit_lm_recursive
) %>%
update_model_description(2, "LM - Lag Roll") %>%
modeltime_forecast(
new_data    = future_data,
actual_data = m750,
keep_data   = TRUE
) %>%
plot_modeltime_forecast(
.interactive        = FALSE,
.conf_interval_show = FALSE
)
riders_monthly_tbl_extended <- riders_monthly_tbl %>%
future_frame(
.length_out = FORECAST_HORIZON,
.bind_data  = TRUE
)
recipe_lag <- recipe(n_riders ~ date, riders_monthly_tbl_extended) %>%
step_lag(value, lag = 1)
# Data Preparation
riders_monthly_tbl_lagged <- recipe_lag %>% prep() %>% juice()
recipe_lag <- recipe(n_riders ~ date, riders_monthly_tbl_extended) %>%
step_lag(n_riders, lag = 1)
# Data Preparation
riders_monthly_tbl_lagged <- recipe_lag %>% prep() %>% juice()
train_data <- riders_monthly_tbl_lagged %>%
filter(!is.na(value)) %>%
drop_na()
train_data <- riders_monthly_tbl_lagged %>%
filter(!is.na(n_riders)) %>%
drop_na()
future_data <- m750_lagged %>%
filter(is.na(n_riders))
future_data <- riders_monthly_tbl_lagged %>%
filter(is.na(n_riders))
# Modeling
model_fit_prophet <- prophet_reg() %>%
set_engine("prophet") %>%
fit(n_riders ~ date, data = train_data)
model_fit_lm_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(n_riders ~ ., data = train_data) %>%
recursive(
transform  = recipe_lag,
train_tail = tail(train_data, 1)
)
model_fit_prophet_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(n_riders ~ ., data = train_data) %>%
recursive(
transform  = recipe_lag,
train_tail = tail(train_data, 1)
)
modeltime_table(
model_fit_prophet,
model_fit_prophet_recursive
) %>%
update_model_description(2, "LM - Lag Roll") %>%
modeltime_forecast(
new_data    = future_data,
actual_data = riders_monthly_tbl,
keep_data   = TRUE
) %>%
plot_modeltime_forecast(
.interactive        = FALSE,
.conf_interval_show = FALSE
)
riders_monthly_tbl <- data %>%
# membuang baris terakhir
slice(-nrow(data)) %>%
# mengubah nama kolom
rename(n_riders = `Portland Oregon average monthly bus ridership (/100) January 1973 through June 1982, n=114`,
date = Month) %>%
# mengubah jenis data
mutate(date = lubridate::ym(date),
n_riders = as.numeric(n_riders)
)
FORECAST_HORIZON <- 12
riders_monthly_tbl_extended <- riders_monthly_tbl %>%
future_frame(
.length_out = FORECAST_HORIZON,
.bind_data  = TRUE
)
recipe_lag <- recipe(n_riders ~ date, riders_monthly_tbl_extended) %>%
step_lag(n_riders, lag = 1)
# Data Preparation
riders_monthly_tbl_lagged <- recipe_lag %>% prep() %>% juice()
train_data <- riders_monthly_tbl_lagged %>%
filter(!is.na(n_riders)) %>%
drop_na()
future_data <- riders_monthly_tbl_lagged %>%
filter(is.na(n_riders))
# Modeling
model_fit_prophet <- prophet_reg() %>%
set_engine("prophet") %>%
fit(n_riders ~ date, data = train_data)
model_fit_prophet_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(n_riders ~ ., data = train_data) %>%
recursive(
transform  = recipe_lag,
train_tail = tail(train_data, 1)
)
modeltime_table(
model_fit_prophet,
model_fit_prophet_recursive
) %>%
update_model_description(2, "LM - Lag Roll") %>%
modeltime_forecast(
new_data    = future_data,
actual_data = riders_monthly_tbl,
keep_data   = TRUE
) %>%
plot_modeltime_forecast(
.interactive        = FALSE,
.conf_interval_show = FALSE
)
riders_monthly_tbl <- data %>%
# membuang baris terakhir
slice(-nrow(data)) %>%
# mengubah nama kolom
rename(n_riders = `Portland Oregon average monthly bus ridership (/100) January 1973 through June 1982, n=114`,
date = Month) %>%
# mengubah jenis data
mutate(date = lubridate::ym(date),
n_riders = as.numeric(n_riders)
)
glimpse(riders_monthly_tbl)
riders_monthly_tbl %>%
plot_acf_diagnostics(
.date_var = date,
.value    = n_riders,
.show_white_noise_bars = TRUE,
.interactive = FALSE
)
splits <- riders_monthly_tbl %>%
time_series_split(
date_var = date,
assess = "1 year",
cumulative = TRUE
)
splits %>%
tk_time_series_cv_plan() %>%
plot_time_series_cv_plan(
.date_var = date,
.value = n_riders,
.interactive = FALSE
)
# forecast horizon 1 tahun
FORECAST_HORIZON <- 12
riders_monthly_tbl_extend <- riders_monthly_tbl %>%
future_frame(
.length_out = FORECAST_HORIZON,
.bind_data  = TRUE
)
tail(riders_monthly_tbl_extend, 13)
prophet_recipe <- recipe(n_riders ~ ., data = riders_monthly_tbl_extend) %>%
step_lag(n_riders, lag = 1)
prophet_recipe
riders_monthly_tbl_lag <- prophet_recipe %>% prep() %>% juice()
# full data
full <- riders_monthly_tbl_lag %>%
filter(!is.na(n_riders)) %>%
drop_na()
# future data
future <- riders_monthly_tbl_lag %>%
filter(is.na(n_riders))
# training data
train <- prophet_recipe %>%
prep() %>%
bake(new_data = training(splits)) %>%
# buang baris dengan missing value
drop_na()
# testing data
test <- prophet_recipe %>%
prep() %>%
bake(new_data = testing(splits)) %>%
# buang baris dengan missing value
drop_na()
prophet_model <- prophet_reg() %>%
set_engine("prophet") %>%
fit(
n_riders ~ date,
data = train
)
prophet_model
prophet_model_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(
n_riders ~ .,
data = train
)
prophet_model_recursive
calibrate <- modeltime_table(
prophet_model,
prophet_model_recursive
) %>%
modeltime_calibrate(
new_data = test
)
calibrate
# cek akurasi model
calibrate %>%
modeltime_accuracy()
calibrate %>%
modeltime_forecast(
new_data = test,
actual_data = full
) %>%
plot_modeltime_forecast(
.interactive = FALSE
)
update_prophet_model_recursive <- prophet_reg() %>%
set_engine("prophet") %>%
fit(
n_riders ~.,
data = full
) %>%
recursive(
transform = prophet_recipe,
train_tail = tail(full, 1)
)
modeltime_table(
update_prophet_model_recursive
) %>%
modeltime_forecast(
new_data = future,
keep_data   = TRUE
)
refit <- calibrate %>%
modeltime_refit(
data = full
) %>%
update_modeltime_model(
.model_id = 2,
.new_model = update_prophet_model_recursive
) %>%
select(.model_id:.model_desc)
refit <- calibrate %>%
modeltime_refit(
data = full
) %>%
update_modeltime_model(
.model_id = 2,
.new_model = update_prophet_model_recursive
)
refit %>%
modeltime_forecast(
new_data = future,
actual_data = riders_monthly_tbl,
keep_data = TRUE
) %>%
plot_modeltime_forecast(
.interactive = FALSE
)
